---
format:
  dashboard:
    orientation: columns
    scrolling: true
---
```{r}
#| message: FALSE
library(dplyr)
library(purrr)
library(stringr)
library(plotly)
library(Luciernaga)

Computer <- getwd()
MainFolder <- file.path(Computer, "data")
TheList <- c("CS")

# Updating Data
walk(.x=TheList, MainFolder=MainFolder, .f=Luciernaga:::DailyQCParse, Maintainer=FALSE)
walk(.x=TheList, .f=Luciernaga:::QCBeadParse, MainFolder=MainFolder)
```

```{r}
MFI_CS <- Luciernaga:::CurrentData(x="CS", MainFolder=MainFolder, type = "MFI")
Gain_CS <- Luciernaga:::CurrentData(x="CS", MainFolder=MainFolder, type = "Gain")
```

```{r}
WindowOfInterest <- Sys.time() - months(12)

MFI_CS <- MFI_CS %>% filter(DateTime >= WindowOfInterest)
Gain_CS <- Gain_CS %>% filter(DateTime >= WindowOfInterest)
```

```{r}
Data <- read.csv("AuroraMaintenance.csv", check.names=FALSE)

Data <- Data %>% filter(!str_detect(reason, "lean"))

RepairCS <- Data %>% filter(instrument %in% "CS")
```

```{r}
x <- MFI_CS
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

UltraVioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=RepairCS)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=RepairCS)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=RepairCS)

YellowGreenPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=RepairCS)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=RepairCS)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=RepairCS)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=RepairCS)
```

```{r}
x <- Gain_CS
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheColumnNames <- TheColumns[str_detect(TheColumns, "Gain")]

UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserDelayGains <- LaserGains[str_detect(LaserGains, "Delay")]
LaserDelayGains <- Luciernaga:::ColorPriority(LaserDelayGains)
LaserPowerGains <- LaserGains[str_detect(LaserGains, "Power")]
LaserPowerGains <- Luciernaga:::ColorPriority(LaserPowerGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)

UltraVioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=RepairCS)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", strict = TRUE, YAxisLabel = "Gain",
                      RepairVisits=RepairCS)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=RepairCS)

YellowGreenPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=RepairCS)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=RepairCS)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCS)

LaserDelayPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserDelayGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCS)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCS)
```

```{r}
x <- Gain_CS
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "rCV")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserDelayGains <- LaserGains[str_detect(LaserGains, "Delay")]
LaserDelayGains <- Luciernaga:::ColorPriority(LaserDelayGains)
LaserPowerGains <- LaserGains[str_detect(LaserGains, "Power")]
LaserPowerGains <- Luciernaga:::ColorPriority(LaserPowerGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)

UltraVioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "%rCV",
                      RepairVisits=RepairCS)

VioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", strict=TRUE, YAxisLabel = "%rCV",
                      RepairVisits=RepairCS)

BluePlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "%rCV",
                      RepairVisits=RepairCS)

YellowGreenPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "%rCV",
                      RepairVisits=RepairCS)

RedPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "%rCV",
                     RepairVisits=RepairCS)

ScatterPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCS)
```

```{r}
PDFPlots <- c(UltraVioletPlotsMFI, VioletPlotsMFI, BluePlotsMFI, YellowGreenPlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, UltraVioletPlotsGain, VioletPlotsGain, BluePlotsGain, YellowGreenPlotsGain, RedPlotsGain, ScatterPlotsGain, LaserDelayPlotsGain, ScalingPlotsGain, UltraVioletPlotsRCV, VioletPlotsRCV, BluePlotsRCV, YellowGreenPlotsRCV, RedPlotsRCV, ScatterPlotsRCV)

#Utility_Patchwork(x=PDFPlots, filename="CSPlots", returntype="pdf", outfolder="C:/Users/12692/Desktop", thecolumns=1)
```

## MFI {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsMFI[[1]])
ggplotly(UltraVioletPlotsMFI[[2]])
ggplotly(UltraVioletPlotsMFI[[3]])
ggplotly(UltraVioletPlotsMFI[[4]])
ggplotly(UltraVioletPlotsMFI[[5]])
ggplotly(UltraVioletPlotsMFI[[6]])
ggplotly(UltraVioletPlotsMFI[[7]])
ggplotly(UltraVioletPlotsMFI[[8]])
ggplotly(UltraVioletPlotsMFI[[9]])
ggplotly(UltraVioletPlotsMFI[[10]])
ggplotly(UltraVioletPlotsMFI[[11]])
ggplotly(UltraVioletPlotsMFI[[12]])
ggplotly(UltraVioletPlotsMFI[[13]])
ggplotly(UltraVioletPlotsMFI[[14]])
ggplotly(UltraVioletPlotsMFI[[15]])
ggplotly(UltraVioletPlotsMFI[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: YellowGreen
ggplotly(YellowGreenPlotsMFI[[1]])
ggplotly(YellowGreenPlotsMFI[[2]])
ggplotly(YellowGreenPlotsMFI[[3]])
ggplotly(YellowGreenPlotsMFI[[4]])
ggplotly(YellowGreenPlotsMFI[[5]])
ggplotly(YellowGreenPlotsMFI[[6]])
ggplotly(YellowGreenPlotsMFI[[7]])
ggplotly(YellowGreenPlotsMFI[[8]])
ggplotly(YellowGreenPlotsMFI[[9]])
ggplotly(YellowGreenPlotsMFI[[10]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserDelayPlotsGain[[1]])
ggplotly(LaserDelayPlotsGain[[2]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(LaserDelayPlotsGain[[3]])
ggplotly(LaserDelayPlotsGain[[4]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
ggplotly(ScalingPlotsGain[[4]])
ggplotly(ScalingPlotsGain[[5]])
```

::: {.card title="MFI"}
:::

## Gain {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsGain[[1]])
ggplotly(UltraVioletPlotsGain[[2]])
ggplotly(UltraVioletPlotsGain[[3]])
ggplotly(UltraVioletPlotsGain[[4]])
ggplotly(UltraVioletPlotsGain[[5]])
ggplotly(UltraVioletPlotsGain[[6]])
ggplotly(UltraVioletPlotsGain[[7]])
ggplotly(UltraVioletPlotsGain[[8]])
ggplotly(UltraVioletPlotsGain[[9]])
ggplotly(UltraVioletPlotsGain[[10]])
ggplotly(UltraVioletPlotsGain[[11]])
ggplotly(UltraVioletPlotsGain[[12]])
ggplotly(UltraVioletPlotsGain[[13]])
ggplotly(UltraVioletPlotsGain[[14]])
ggplotly(UltraVioletPlotsGain[[15]])
ggplotly(UltraVioletPlotsGain[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: YellowGreen
ggplotly(YellowGreenPlotsGain[[1]])
ggplotly(YellowGreenPlotsGain[[2]])
ggplotly(YellowGreenPlotsGain[[3]])
ggplotly(YellowGreenPlotsGain[[4]])
ggplotly(YellowGreenPlotsGain[[5]])
ggplotly(YellowGreenPlotsGain[[6]])
ggplotly(YellowGreenPlotsGain[[7]])
ggplotly(YellowGreenPlotsGain[[8]])
ggplotly(YellowGreenPlotsGain[[9]])
ggplotly(YellowGreenPlotsGain[[10]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(LaserPlotsMFI[[3]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserDelayPlotsGain[[1]])
ggplotly(LaserDelayPlotsGain[[2]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(LaserDelayPlotsGain[[3]])
ggplotly(LaserDelayPlotsGain[[4]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
ggplotly(ScalingPlotsGain[[4]])
ggplotly(ScalingPlotsGain[[5]])
```

::: {.card title="Gain"}
:::

## rCV {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsRCV[[1]])
ggplotly(UltraVioletPlotsRCV[[2]])
ggplotly(UltraVioletPlotsRCV[[3]])
ggplotly(UltraVioletPlotsRCV[[4]])
ggplotly(UltraVioletPlotsRCV[[5]])
ggplotly(UltraVioletPlotsRCV[[6]])
ggplotly(UltraVioletPlotsRCV[[7]])
ggplotly(UltraVioletPlotsRCV[[8]])
ggplotly(UltraVioletPlotsRCV[[9]])
ggplotly(UltraVioletPlotsRCV[[10]])
ggplotly(UltraVioletPlotsRCV[[11]])
ggplotly(UltraVioletPlotsRCV[[12]])
ggplotly(UltraVioletPlotsRCV[[13]])
ggplotly(UltraVioletPlotsRCV[[14]])
ggplotly(UltraVioletPlotsRCV[[15]])
ggplotly(UltraVioletPlotsRCV[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsRCV[[1]])
ggplotly(VioletPlotsRCV[[2]])
ggplotly(VioletPlotsRCV[[3]])
ggplotly(VioletPlotsRCV[[4]])
ggplotly(VioletPlotsRCV[[5]])
ggplotly(VioletPlotsRCV[[6]])
ggplotly(VioletPlotsRCV[[7]])
ggplotly(VioletPlotsRCV[[8]])
ggplotly(VioletPlotsRCV[[9]])
ggplotly(VioletPlotsRCV[[10]])
ggplotly(VioletPlotsRCV[[11]])
ggplotly(VioletPlotsRCV[[12]])
ggplotly(VioletPlotsRCV[[13]])
ggplotly(VioletPlotsRCV[[14]])
ggplotly(VioletPlotsRCV[[15]])
ggplotly(VioletPlotsRCV[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsRCV[[1]])
ggplotly(BluePlotsRCV[[2]])
ggplotly(BluePlotsRCV[[3]])
ggplotly(BluePlotsRCV[[4]])
ggplotly(BluePlotsRCV[[5]])
ggplotly(BluePlotsRCV[[6]])
ggplotly(BluePlotsRCV[[7]])
ggplotly(BluePlotsRCV[[8]])
ggplotly(BluePlotsRCV[[9]])
ggplotly(BluePlotsRCV[[10]])
ggplotly(BluePlotsRCV[[11]])
ggplotly(BluePlotsRCV[[12]])
ggplotly(BluePlotsRCV[[13]])
ggplotly(BluePlotsRCV[[14]])
```

```{r}
#| title: YellowGreen
ggplotly(YellowGreenPlotsRCV[[1]])
ggplotly(YellowGreenPlotsRCV[[2]])
ggplotly(YellowGreenPlotsRCV[[3]])
ggplotly(YellowGreenPlotsRCV[[4]])
ggplotly(YellowGreenPlotsRCV[[5]])
ggplotly(YellowGreenPlotsRCV[[6]])
ggplotly(YellowGreenPlotsRCV[[7]])
ggplotly(YellowGreenPlotsRCV[[8]])
ggplotly(YellowGreenPlotsRCV[[9]])
ggplotly(YellowGreenPlotsRCV[[10]])
```

```{r}
#| title: Red
ggplotly(RedPlotsRCV[[1]])
ggplotly(RedPlotsRCV[[2]])
ggplotly(RedPlotsRCV[[3]])
ggplotly(RedPlotsRCV[[4]])
ggplotly(RedPlotsRCV[[5]])
ggplotly(RedPlotsRCV[[6]])
ggplotly(RedPlotsRCV[[7]])
ggplotly(RedPlotsRCV[[8]])
```


```{r}
#| title: Scatter
ggplotly(ScatterPlotsRCV[[1]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(ScatterPlotsRCV[[2]])
ggplotly(ScatterPlotsRCV[[3]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(LaserPlotsMFI[[3]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserDelayPlotsGain[[1]])
ggplotly(LaserDelayPlotsGain[[2]])
ggplotly(LaserPlotsMFI[[3]])
ggplotly(LaserDelayPlotsGain[[3]])
ggplotly(LaserDelayPlotsGain[[4]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
ggplotly(ScalingPlotsGain[[4]])
ggplotly(ScalingPlotsGain[[5]])
```
::: {.card title="rCV"}
:::

