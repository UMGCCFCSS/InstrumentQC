---
format:
  dashboard:
    orientation: columns
    scrolling: true
---

```{r}
#| message: FALSE
library(dplyr)
library(purrr)
library(stringr)
library(plotly)
library(Luciernaga)

Computer <- getwd()
MainFolder <- file.path(Computer, "data")
TheList <- c("Canto")

# Updating Data (Work through later)
walk(.x=TheList, .f=Luciernaga:::HolisticQCParse, MainFolder=MainFolder)
```

```{r}
CantoData <- Luciernaga:::CurrentData(x=TheList, MainFolder=MainFolder, type = "Both")
```

```{r}
WindowOfInterest <- Sys.time() - months(12)

Both_Canto <- CantoData %>% filter(DateTime >= WindowOfInterest)
```

```{r}
Data <- read.csv("AuroraMaintenance.csv", check.names=FALSE)

Data <- Data %>% filter(!str_detect(reason, "lean"))

RepairCanto <- Data %>% filter(instrument %in% "Canto")
```


```{r}
x <- Both_Canto
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

# MFIs
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots",
                      Metadata=NULL, strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=RepairCanto)                     

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots",
                     Metadata=NULL, strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=RepairCanto)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots",
                     Metadata=NULL, strict = TRUE, YAxisLabel = " ",
                     RepairVisits=RepairCanto)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots",
                     Metadata=NULL, strict = TRUE, YAxisLabel = " ",
                     RepairVisits=RepairCanto)
```

```{r}
x <- Both_Canto
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

# Gains
TheColumnNames <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheColumnNames[str_detect(TheIntermediate, "-A")]

BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=RepairCanto)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=RepairCanto)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCanto)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCanto)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=RepairCanto)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("QCPlots_Canto")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```

## MFI {.tabset}

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
```
```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[2]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
```


::: {.card title="MFI"}
:::

## Gain {.tabset}

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(ScatterPlotsGain[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[2]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
```

::: {.card title="Gain"}
:::
