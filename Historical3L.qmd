---
format:
  dashboard:
    orientation: columns
    scrolling: true
---

```{r}
#| message: FALSE
library(dplyr)
library(purrr)
library(stringr)
library(plotly)
library(Luciernaga)
library(lubridate)

Computer <- getwd()
MainFolder <- file.path(Computer, "data")
TheList <- c("3L")
Location <- file.path(MainFolder, TheList, "Archive")
CSV <- list.files(Location, pattern="Bead", full.names=TRUE)
Data <- read.csv(CSV, check.names=FALSE)
TheDate <- Data %>% slice(1) %>% pull(DATE)

Data$DateTime <- lubridate::ymd_hms(Data$DateTime)
#tail(Data, 1)
```

```{r}
Maintenance <- read.csv("AuroraMaintenance.csv", check.names=FALSE)
Maintenance <- Maintenance %>% filter(!str_detect(reason, "lean"))
Maintenance <- Maintenance %>% filter(instrument %in% TheList)
```

```{r}
The2025 <- Data |> dplyr::filter(year(DateTime) == 2025)
The2024 <- Data |> dplyr::filter(year(DateTime) == 2024)
The2023 <- Data |> dplyr::filter(year(DateTime) == 2023)
The2022 <- Data |> dplyr::filter(year(DateTime) == 2022)
The2021 <- Data |> dplyr::filter(year(DateTime) == 2021)
The2020 <- Data |> dplyr::filter(year(DateTime) == 2020)
```

## {.sidebar}
Dashboard contains historical data for the **Cytek Aurora 3L** last updated on **`r TheDate`**

**Note:** Cytek QC Bead Lots were switched on 12-06-2024. MFI change on this date was expected.

**First Column: MFI** Median Fluorescent Intensity (MFI) values for QC beads acquired Before and After QC. Measures stability over time. 
**Second Column: Gain** Gain (Voltage) values set for instrument after QC. Changes over time reflective of laser health. 

For additional information concerning individual parameter tabs, navigate to the [Help](https://umgccfcss.github.io/InstrumentQC/help) page.

**About**

This dashboard contains the visualized QC data for the Cytek and BD cytometers at the [UMGCC FCSS](https://www.medschool.umaryland.edu/cibr/core/umgccc_flow/)

For additional flow cytometry resources, visit our [website](https://sites.google.com/view/umgcccflow/home)

This dashboard was created with [Quarto](https://quarto.org/) and is maintained by [David Rach](https://github.com/DavidRach)

## 2020 {.tabset}
```{r}
x <- The2020

# MFI
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=Maintenance)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
# Gains

x <- x %>% dplyr::filter(Timepoint %in% c("After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]

#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=Maintenance)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(VioletPlotsMFI, BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, VioletPlotsGain, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("Historical_Aurora3L_2020")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```


```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(LaserPlotsMFI[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```


## 2021 {.tabset}
```{r}
x <- The2021

# MFI
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=Maintenance)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
# Gains

x <- x %>% dplyr::filter(Timepoint %in% c("After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]

#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=Maintenance)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(VioletPlotsMFI, BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, VioletPlotsGain, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("Historical_Aurora3L_2021")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```


```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(LaserPlotsMFI[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```


## 2022 {.tabset}
```{r}
x <- The2022

# MFI
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=Maintenance)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
# Gains

x <- x %>% dplyr::filter(Timepoint %in% c("After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]

#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=Maintenance)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(VioletPlotsMFI, BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, VioletPlotsGain, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("Historical_Aurora3L_2022")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```


```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(LaserPlotsMFI[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```


## 2023 {.tabset}
```{r}
x <- The2023

# MFI
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=Maintenance)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
# Gains

x <- x %>% dplyr::filter(Timepoint %in% c("After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]

#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=Maintenance)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(VioletPlotsMFI, BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, VioletPlotsGain, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("Historical_Aurora3L_2023")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```


```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(LaserPlotsMFI[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```


## 2024 {.tabset}
```{r}
x <- The2024

# MFI
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=Maintenance)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
# Gains

x <- x %>% dplyr::filter(Timepoint %in% c("After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]

#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=Maintenance)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(VioletPlotsMFI, BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, VioletPlotsGain, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("Historical_Aurora3L_2024")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```


```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(LaserPlotsMFI[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```


## 2025 {.tabset}
```{r}
x <- The2025

# MFI
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheIntermediate[str_detect(TheIntermediate, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheIntermediate[str_detect(TheIntermediate, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheIntermediate[str_detect(TheIntermediate, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                      RepairVisits=Maintenance)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = "MFI",
                     RepairVisits=Maintenance)

ScatterPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=ScatterGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=LaserGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE, YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
# Gains

x <- x %>% dplyr::filter(Timepoint %in% c("After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")
TheIntermediate <- TheColumns[str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]

#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

ScatterGains <- TheColumnNames[str_detect(TheColumnNames, "SC-")]
ScatterGains <- Luciernaga:::ScalePriority(ScatterGains)
LaserGains <- TheColumns[str_detect(TheColumns, "Laser")]
LaserGains <- Luciernaga:::ColorPriority(LaserGains)
ScalingGains <- TheColumns[str_detect(TheColumns, "Scaling")]
ScalingGains <- Luciernaga:::ColorPriority(ScalingGains)
OtherGains <- c(ScatterGains, LaserGains, ScalingGains)

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

BluePlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                      RepairVisits=Maintenance)

RedPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = "Gain",
                     RepairVisits=Maintenance)

ScatterPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScatterGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

LaserPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=LaserGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)

ScalingPlotsGain <- QC_Plots(x=x, FailedFlag=FALSE, MeasurementType=ScalingGains,
                     plotType = "individual", returntype = "plots", YAxisLabel = " ",
                     RepairVisits=Maintenance)
```

```{r}
#| include: false
#| echo: false
PDFPlots <- c(VioletPlotsMFI, BluePlotsMFI, RedPlotsMFI, LaserPlotsMFI, ScatterPlotsMFI, VioletPlotsGain, BluePlotsGain, RedPlotsGain, ScatterPlotsGain, LaserPlotsGain, ScalingPlotsGain)

Filename <- paste0("Historical_Aurora3L_2025")

PDF <- Utility_Patchwork(x=PDFPlots, filename=Filename, returntype="pdf", outfolder=MainFolder, thecolumns=1)
```


```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsMFI[[1]])
ggplotly(ScatterPlotsMFI[[2]])
ggplotly(ScatterPlotsMFI[[3]])
ggplotly(ScatterPlotsMFI[[4]])
ggplotly(ScatterPlotsMFI[[5]])
ggplotly(ScatterPlotsMFI[[6]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

```{r}
#| title: Scatter
ggplotly(ScatterPlotsGain[[1]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(ScatterPlotsGain[[2]])
ggplotly(ScatterPlotsGain[[3]])
ggplotly(LaserPlotsMFI[[2]])
ggplotly(LaserPlotsMFI[[2]])
```

```{r}
#| title: LaserDelay
ggplotly(LaserPlotsGain[[1]])
ggplotly(LaserPlotsGain[[3]])
ggplotly(LaserPlotsGain[[5]])
```

```{r}
#| title: LaserScaling
ggplotly(ScalingPlotsGain[[1]])
ggplotly(ScalingPlotsGain[[2]])
ggplotly(ScalingPlotsGain[[3]])
```


