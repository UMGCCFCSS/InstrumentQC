[
  {
    "objectID": "TaskSchedules.html",
    "href": "TaskSchedules.html",
    "title": "3L",
    "section": "",
    "text": "library(utils)\nlibrary(taskscheduleR)\n\n\n3L\n\n# Automated QC\nWorkingDirectory &lt;- file.path(\"C:\", \"DailyQC\", \"InstrumentQC\")\nTheScript &lt;- file.path(WorkingDirectory, \"TheScript_3L.R\")\n\ntaskscheduler_create(taskname = \"QC_3L_Morning\",\n                     rscript=TheScript,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"10:00\")\n\n# Flag Removal\nTheFlagScript &lt;- file.path(WorkingDirectory, \"FlagRemoval.R\")\n\ntaskscheduler_create(taskname = \"FlagRemoval\",\n                     rscript=TheFlagScript,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"13:00\")\n\n#source(\"C:/Users/12692/Documents/ILT_Analysis/TestScheduler1.R\")\n\n#taskscheduler_ls(\"test_run\")\n#taskscheduler_delete(\"QC_3L_Morning\")\n\n\n\n4L\n\n# Automated QC\nWorkingDirectory &lt;- file.path(\"C:\", \"DailyQC\", \"InstrumentQC\")\nTheScript &lt;- file.path(WorkingDirectory, \"TheScript_4L.R\")\n\ntaskscheduler_create(taskname = \"QC_4L_Morning\",\n                     rscript=TheScript,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"10:02\")\n\n# Flag Removal\nTheFlagScript &lt;- file.path(WorkingDirectory, \"FlagRemoval.R\")\n\ntaskscheduler_create(taskname = \"FlagRemoval\",\n                     rscript=TheFlagScript,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"13:00\")\n\n#source(\"C:/Users/12692/Documents/ILT_Analysis/TestScheduler1.R\")\n\n#taskscheduler_ls(\"test_run\")\n#taskscheduler_delete(\"TestTry\")\n\n\n\n5L\n\n# Automated QC\ntaskscheduler_create(taskname = \"QC_5L_Morning\",\n                     rscript=\"C:/Users/Aurora/Documents/InstrumentQC/TheScript_5L.R\",\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"10:34\")\n\n# Flag Removal\nTheFlagScript &lt;- file.path(WorkingDirectory, \"FlagRemoval.R\")\n\ntaskscheduler_create(taskname = \"FlagRemoval\",\n                     rscript=TheFlagScript,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"13:00\")\n\n#source(\"C:/Users/12692/Documents/ILT_Analysis/TestScheduler1.R\")\n\n#taskscheduler_ls()\n#taskscheduler_delete(\"QC_5L_Morning\")\n\n\n\nCS\n\n# Automated QC\nMain &lt;- file.path(\"C:\", \"Users\", \"Aurora CS\")\nRepositoryPath &lt;- file.path(Main, \"Documents\", \"InstrumentQC\", \"TheScript_CS.R\")\n\ntaskscheduler_create(taskname = \"QC_CS_Morning\",\n                     rscript=RepositoryPath,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"10:36\")\n\n# Flag Removal\nMain &lt;- file.path(\"C:\", \"Users\", \"Aurora CS\")\nTheFlagScript &lt;- file.path(Main, \"Documents\", \"InstrumentQC\", \"FlagRemoval.R\")\n\ntaskscheduler_create(taskname = \"FlagRemoval\",\n                     rscript=TheFlagScript,\n                     schedule=\"DAILY\",\n                     startdate = format(Sys.Date(), \"%m/%d/%Y\"),\n                     starttime = \"13:00\")\n\n#source(TheFlagScript)\n\n#taskscheduler_ls()\n#taskscheduler_delete(\"QC_CS_Morning\")"
  },
  {
    "objectID": "Installation.html",
    "href": "Installation.html",
    "title": "Setting up the Dashboard",
    "section": "",
    "text": "If you would like to implement a similar InstrumentQC dashboard for your own Cytek instruments at your own institution, please continue reading below for the technical details.\nThe data for the dashboard is processed using R. Similarly, the dashboard website itself is built with Quarto and published as a GitHub pages.\nYou will first need to make sure that R, RStudio, Rtools, Quarto and Git are installed on every computer you will be collecting QC data from. Accept the default configurations when setting these softwares up. If you do not have admin privileges to install these software programs, reach out to your IT person.\nIf you don’t already have one setup, you will need to create a GitHub account. The free tier should be fine.\nOnce this is done, sign in and fork the project to your own account. This will copy the folder to your GitHub account where you can start making changes.\nBefore getting started, you will need to set up a Github Token access between your individual computers and your GitHub account. To do so, navigate to…\nTo ensure you can process the data and generate the plots, you will need to install the Luciernaga package and it’s dependencies, as well as a couple tidyverse packages. These can be done as follows…\n\nSetting up the Dashboard\nHaving all the pieces, let’s begin with the dashboard structure.\nEach of the website/dashboards pages is represented by it’s own .qmd file. If you only have one instrument, you would eliminate the uneccessary .qmd files until only the necessary ones are present.\nOnce this is done, you can adjust the code to match number of parameters present.\n\n\nAutomating the Dashboard\nOnce you have customized the .qmd files for your respective instruments, and you have successfully rendered the dashboard and deployed to the GitHub pages, you are at the stage that if so desired you can automate the process and send the data to your GitHub.\nTo do this, we rely on two components. The TaskScheduler is part of your Windows system that schedules when to do updates, etc. We can use this to our advantage and set a particular time for when the files need to be processed and passed to GitHub.\nThe second part is the script. The script is customized for each instruments computer file structure, pointing to the location of the InstrumentQC folder, the folder containing the before and after QC Bead .fcs files, and the DailyQC .csv outputs folder. Once these file paths are specified, and task scheduler set, they will retrieve the data on a daily basis and send."
  },
  {
    "objectID": "help.html",
    "href": "help.html",
    "title": "UMGCC FCSS",
    "section": "",
    "text": "“Voltage” that is applied to each detector. Gains are adjusted by the Daily QC to keep the MFI stable across time allowing samples collected on one day to be equivalent for the other.\nAs a laser wears out over large periods of time, the amount of gain needed to keep the MFI stable will continue to increase.\nA gain fail is defined as when the gain recorded at daily QC is twice the original baseline gain value."
  },
  {
    "objectID": "help.html#gain",
    "href": "help.html#gain",
    "title": "UMGCC FCSS",
    "section": "",
    "text": "“Voltage” that is applied to each detector. Gains are adjusted by the Daily QC to keep the MFI stable across time allowing samples collected on one day to be equivalent for the other.\nAs a laser wears out over large periods of time, the amount of gain needed to keep the MFI stable will continue to increase.\nA gain fail is defined as when the gain recorded at daily QC is twice the original baseline gain value."
  },
  {
    "objectID": "help.html#rcv",
    "href": "help.html#rcv",
    "title": "UMGCC FCSS",
    "section": "%rCV",
    "text": "%rCV\nA %rCV that exceeds the limit can lead to loss of resolution for dim staining populations on that detector.\nA %rCV fail for daily QC is counted by Cytek as being when &gt; 6 %rCV for the FSC, UV3, V3, B3, YG3, R3 detectors, or &gt;8%rCV for the SSC detectors. When any of these is met, QC will fail.\nFor our dashboard, if &gt;6 % rCV is observed for any other detector than those mentioned above, it will return a yellow caution/warning for the instrument."
  },
  {
    "objectID": "help.html#mfi",
    "href": "help.html#mfi",
    "title": "UMGCC FCSS",
    "section": "MFI",
    "text": "MFI\nThe Mean Fluorescent Intensity (MFI) is calculated based on the measured brightness values across detectors for the QC beads. During QC, the Gain is adjusted to ensure the after QC MFI is stable across time. This can be seen when comparing the before and after MFI samples.\nThe MFI for a particular detector that is having issues can be observed when there is a change in trendline over time or when it bounces back and forth across days."
  },
  {
    "objectID": "help.html#scatter",
    "href": "help.html#scatter",
    "title": "UMGCC FCSS",
    "section": "Scatter",
    "text": "Scatter\nThe Scatter Plots show the MFI, Gain and % rCV values for the scatter parameters (FSC, SSC, SSC-B)"
  },
  {
    "objectID": "help.html#laser-delay",
    "href": "help.html#laser-delay",
    "title": "UMGCC FCSS",
    "section": "Laser Delay",
    "text": "Laser Delay\nThe Laser Delay Plots depict…"
  },
  {
    "objectID": "help.html#laser-power",
    "href": "help.html#laser-power",
    "title": "UMGCC FCSS",
    "section": "Laser Power",
    "text": "Laser Power\nThe Laser Power Plots depict …"
  },
  {
    "objectID": "help.html#laser-area-scaling-factor",
    "href": "help.html#laser-area-scaling-factor",
    "title": "UMGCC FCSS",
    "section": "Laser Area Scaling Factor:",
    "text": "Laser Area Scaling Factor:\nThe Laser Area Scaling Factor Plots depict …"
  },
  {
    "objectID": "Examples_FlagRemoval.html",
    "href": "Examples_FlagRemoval.html",
    "title": "UMGCC FCSS",
    "section": "",
    "text": "Please save the below as .R files for each individual computer. This FlagRemoval.R file is then called by source(FlagRemoval.R) in the TaskSchedule process to remove any generated Flag.csv files at the end of the day, resetting the automatic processing for the next day.\n\n# 3L\nMain &lt;- file.path(\"C:\", \"Users\", \"12692\", \"Documents\", \"InstrumentQC\")\nAnyFlags &lt;- list.files(Main, pattern=\"Flag.csv\", full.names=TRUE)\n\nif (!length(AnyFlags) == 0){\n  TheCSV &lt;- file.path(Main, \"Flag.csv\")\n  file.remove(TheCSV)\n}\n\n\n# 4L\nMain &lt;- file.path(\"C:\", \"Users\", \"12692\", \"Documents\", \"InstrumentQC\")\nAnyFlags &lt;- list.files(Main, pattern=\"Flag.csv\", full.names=TRUE)\n\nif (!length(AnyFlags) == 0){\n  TheCSV &lt;- file.path(Main, \"Flag.csv\")\n  file.remove(TheCSV)\n}\n\n\n# 5L\nMain &lt;- file.path(\"C:\", \"Users\", \"12692\", \"Documents\", \"InstrumentQC\")\nAnyFlags &lt;- list.files(Main, pattern=\"Flag.csv\", full.names=TRUE)\n\nif (!length(AnyFlags) == 0){\n  TheCSV &lt;- file.path(Main, \"Flag.csv\")\n  file.remove(TheCSV)\n}\n\n\n# CS\nMain &lt;- file.path(\"C:\", \"Users\", \"12692\", \"Documents\", \"InstrumentQC\")\nAnyFlags &lt;- list.files(Main, pattern=\"Flag.csv\", full.names=TRUE)\n\nif (!length(AnyFlags) == 0){\n  TheCSV &lt;- file.path(Main, \"Flag.csv\")\n  file.remove(TheCSV)\n}"
  },
  {
    "objectID": "Examples_staff.html",
    "href": "Examples_staff.html",
    "title": "UMGCC FCSS",
    "section": "",
    "text": "To manually send the QC data to the server, please click the green play button below to run the chunk of code. If you see that the success message appears in the console below, you have done so successfully.\n\n#3L\nMain &lt;- file.path(\"C:\", \"DailyQC\", \"InstrumentQC\")\nsetwd(Main)\nTheScript &lt;- file.path(Main, \"TheScript_3L.R\")\nsource(TheScript)\n\nToday &lt;- Sys.time()\nToday &lt;- as.Date(Today)\n\nMain &lt;- file.path(\"C:\", \"DailyQC\", \"InstrumentQC\")\nFlag = data.frame(Flag=Today, Status=\"Success\")\nTheFlag &lt;- file.path(Main, \"Flag.csv\")\nwrite.csv(Flag, TheFlag, row.names=FALSE)\n#file.remove(TheFlag)\n\n\n#4L\n\nMain &lt;- file.path(\"C:\", \"DailyQC\", \"InstrumentQC\")\nsetwd(Main)\nTheScript &lt;- file.path(Main, \"TheScript_4L.R\")\nsource(TheScript)\n\nToday &lt;- Sys.time()\nToday &lt;- as.Date(Today)\n\nMain &lt;- file.path(\"C:\", \"DailyQC\", \"InstrumentQC\")\nFlag = data.frame(Flag=Today, Status=\"Success\")\nTheFlag &lt;- file.path(Main, \"Flag.csv\")\nwrite.csv(Flag, TheFlag, row.names=FALSE)\n#file.remove(TheFlag)\n\n\n#5L\nMain &lt;- file.path(\"C:\", \"Users\", \"Aurora\", \"Documents\", \"InstrumentQC\")\nsetwd(Main)\nTheScript &lt;- file.path(Main, \"TheScript_5L.R\")\nsource(TheScript)\n\nToday &lt;- Sys.time()\nToday &lt;- as.Date(Today)\n\nMain &lt;- file.path(\"C:\", \"Users\", \"Aurora\", \"Documents\", \"InstrumentQC\")\nFlag = data.frame(Flag=Today, Status=\"Success\")\nTheFlag &lt;- file.path(Main, \"Flag.csv\")\nwrite.csv(Flag, TheFlag, row.names=FALSE)\n#file.remove(TheFlag)\n\n\n#CS\nMain &lt;- file.path(\"C:\", \"Users\", \"Aurora CS\", \"Documents\", \"InstrumentQC\")\nsetwd(Main)\nTheScript &lt;- file.path(Main, \"TheScript_CS.R\")\nsource(TheScript)\n\nToday &lt;- Sys.time()\nToday &lt;- as.Date(Today)\n\nMain &lt;- file.path(\"C:\", \"Users\", \"Aurora CS\", \"Documents\", \"InstrumentQC\")\nFlag = data.frame(Flag=Today, Status=\"Success\")\nTheFlag &lt;- file.path(Main, \"Flag.csv\")\nwrite.csv(Flag, TheFlag, row.names=FALSE)\n\nmessage(\"Data successfully sent!\")\n#file.remove(TheFlag)"
  },
  {
    "objectID": "staff.html",
    "href": "staff.html",
    "title": "UMGCC FCSS",
    "section": "",
    "text": "To manually send the QC data to the server, please click the green play button below to run the chunk of code. If you see that the success message appears in the console below, you have done so successfully.\n\nToday &lt;- Sys.time()\nToday &lt;- as.Date(Today)\n\nFlag = data.frame(Flag=Today, Status=\"Success\")\nTheFlag &lt;- file.path(Main, \"Flag.csv\")\nwrite.csv(Flag, TheFlag, row.names=FALSE)\n\nmessage(\"Data successfully sent!\")\n#file.remove(TheFlag)"
  }
]